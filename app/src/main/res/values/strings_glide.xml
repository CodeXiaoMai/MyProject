<?xml version="1.0" encoding="utf-8"?>
<resources>
    <string name="code_glide_base">
        "public class GlideBaseActivity extends BaseActivity {\n"
            "\n"
            "    @BindView(R.id.tv_glide_1)\n"
            "    TextView tvGlide1;\n"
            "\n"
            "    @BindView(R.id.iv_glide_1)\n"
            "    ImageView ivGlide1;\n"
            "\n"
            "    @BindView(R.id.tv_glide_2)\n"
            "    TextView tvGlide2;\n"
            "\n"
            "    @BindView(R.id.iv_glide_2)\n"
            "    ImageView ivGlide2;\n"
            "\n"
            "    @BindView(R.id.tv_glide_3)\n"
            "    TextView tvGlide3;\n"
            "\n"
            "    @BindView(R.id.iv_glide_3)\n"
            "    ImageView ivGlide3;\n"
            "\n"
            "    @BindView(R.id.tv_glide_4)\n"
            "    TextView tvGlide4;\n"
            "\n"
            "    @BindView(R.id.iv_glide_4)\n"
            "    ImageView ivGlide4;\n"
            "\n"
            "    @BindView(R.id.tv_glide_5)\n"
            "    TextView tvGlide5;\n"
            "\n"
            "    @BindView(R.id.iv_glide_5)\n"
            "    ImageView ivGlide5;\n"
            "\n"
            "    @BindView(R.id.tv_glide_6)\n"
            "    TextView tvGlide6;\n"
            "\n"
            "    @BindView(R.id.iv_glide_6)\n"
            "    ImageView ivGlide6;\n"
            "\n"
            "    @BindView(R.id.tv_glide_7)\n"
            "    TextView tvGlide7;\n"
            "\n"
            "    @BindView(R.id.iv_glide_7)\n"
            "    ImageView ivGlide7;\n"
            "\n"
            "    @BindView(R.id.tv_glide_8)\n"
            "    TextView tvGlide8;\n"
            "\n"
            "    @BindView(R.id.iv_glide_8)\n"
            "    ImageView ivGlide8;\n"
            "\n"
            "    @BindView(R.id.tv_glide_9)\n"
            "    TextView tvGlide9;\n"
            "\n"
            "    @BindView(R.id.iv_glide_9)\n"
            "    ImageView ivGlide9;\n"
            "\n"
            "    @Override\n"
            "    protected int getContentLayout() {\n"
            "        return R.layout.activity_glide_base;\n"
            "    }\n"
            "\n"
            "    @Override\n"
            "    protected void initViews() {\n"
            "        super.initViews();\n"
            "        setTitle(\"Glide的基本使用\");\n"
            "    }\n"
            "\n"
            "    @Override\n"
            "    protected void loadData() {\n"
            "        super.loadData();\n"
            "        // 1.加载网络图片\n"
            "        tvGlide1.setText(\"1.加载网络图片\");\n"
            "        Glide.with(mContext).load(\"https://www.baidu.com/img/bd_logo1.png\").into(ivGlide1);\n"
            "\n"
            "        // 2.加载资源图片\n"
            "        tvGlide2.setText(\"2.加载资源图片\");\n"
            "        Glide.with(mContext).load(R.drawable.ic_launcher).into(ivGlide2);\n"
            "\n"
            "        // 3.加载本地图片\n"
            "        tvGlide3.setText(\"3.加载本地图片\");\n"
            "        String path = Environment.getExternalStorageDirectory() + \"/meinv1.jpg\";\n"
            "        File file = new File(path);\n"
            "        Uri uri = Uri.fromFile(file);\n"
            "        Glide.with(mContext).load(uri).into(ivGlide3);\n"
            "\n"
            "        // 4.加载网络gif\n"
            "        tvGlide4.setText(\"4.加载网络gif\");\n"
            "        String gifUrl = \"http://b.hiphotos.baidu.com/zhidao/pic/item/faedab64034f78f066abccc57b310a55b3191c67.jpg\";\n"
            "        Glide.with(mContext).load(gifUrl).placeholder(R.drawable.ic_launcher).into(ivGlide4);\n"
            "\n"
            "        // 5.加载资源gif\n"
            "        tvGlide5.setText(\"5.加载资源gif\");\n"
            "        Glide.with(mContext).load(R.drawable.anim).asGif().placeholder(R.drawable.ic_launcher)\n"
            "                .into(ivGlide5);\n"
            "\n"
            "        // 6.加载本地gif\n"
            "        tvGlide6.setText(\"6.加载本地gif\");\n"
            "        String gifPath = Environment.getExternalStorageDirectory() + \"/meinv2.jpg\";\n"
            "        File gifFile = new File(gifPath);\n"
            "        Glide.with(mContext).load(gifFile).placeholder(R.drawable.ic_launcher).into(ivGlide6);\n"
            "\n"
            "        // 7.加载本地小视频和快照\n"
            "        tvGlide7.setText(\"7.加载本地小视频和快照\");\n"
            "        String videoPath = Environment.getExternalStorageDirectory() + \"/video.mp4\";\n"
            "        File videoFile = new File(videoPath);\n"
            "        Glide.with(mContext).load(Uri.fromFile(videoFile)).placeholder(R.drawable.ic_launcher)\n"
            "                .into(ivGlide7);\n"
            "\n"
            "        // 8.设置缩略图比例,然后先加载缩略图,再加载原图\n"
            "        tvGlide8.setText(\"8.设置缩略图比例,然后先加载缩略图,再加载原图\");\n"
            "        String urlPath = Environment.getExternalStorageDirectory() + \"/meinv1.jpg\";\n"
            "        Glide.with(mContext).load(new File(urlPath)).thumbnail(0.1f).centerCrop()\n"
            "                .placeholder(R.drawable.ic_launcher).into(ivGlide8);\n"
            "\n"
            "        // 9.建立一个缩略图对象，然后先加载缩略图，再加载原图\n"
            "        tvGlide9.setText(\"9.建立一个缩略图对象，然后先加载缩略图，再加载原图\");\n"
            "        DrawableRequestBuilder thumbnailRequest = Glide.with(mContext).load(new File(urlPath));\n"
            "        Glide.with(mContext).load(gifUrl).thumbnail(thumbnailRequest).centerCrop()\n"
            "                .placeholder(R.drawable.ic_launcher).into(ivGlide9);\n"
            "    }\n"
            "}\n"
    </string>
    
    <string name="code_glide_recycler_view">
            "public class GlideRecyclerViewAdapter\n"
            "        extends RecyclerView.Adapter&lt;GlideRecyclerViewAdapter.ViewHolder&gt; {\n"
            "\n"
            "    private Context context;\n"
            "\n"
            "    private String[] datas;\n"
            "\n"
            "    public GlideRecyclerViewAdapter(Context context, String[] datas) {\n"
            "        this.context = context;\n"
            "        this.datas = datas;\n"
            "    }\n"
            "\n"
            "    @Override\n"
            "    public ViewHolder onCreateViewHolder(ViewGroup parent, int viewType) {\n"
            "        View itemView = View.inflate(context, R.layout.item_glide_recyclerview, null);\n"
            "        return new ViewHolder(itemView);\n"
            "    }\n"
            "\n"
            "    @Override\n"
            "    public void onBindViewHolder(ViewHolder holder, int position) {\n"
            "        int width = (int) TypedValue.applyDimension(TypedValue.COMPLEX_UNIT_DIP, 200,\n"
            "                context.getResources().getDisplayMetrics());\n"
            "        int height = (int) TypedValue.applyDimension(TypedValue.COMPLEX_UNIT_DIP, 200f,\n"
            "                context.getResources().getDisplayMetrics());\n"
            "        Glide.with(context).load(datas[position]).placeholder(R.drawable.ic_launcher)\n"
            "                .error(R.mipmap.ic_launcher) // 出错的占位图\n"
            "                .override(width, height) // 图片显示的分辨率，像素值可以转化为Dp再设置\n"
            "                .animate(R.anim.glide_anim).centerCrop().fitCenter().into(holder.imageView);\n"
            "    }\n"
            "\n"
            "    @Override\n"
            "    public int getItemCount() {\n"
            "        return datas == null ? 0 : datas.length;\n"
            "    }\n"
            "\n"
            "    static class ViewHolder extends RecyclerView.ViewHolder {\n"
            "\n"
            "        @BindView(R.id.iv_glide_recycler_view)\n"
            "        ImageView imageView;\n"
            "\n"
            "        public ViewHolder(View itemView) {\n"
            "            super(itemView);\n"
            "            ButterKnife.bind(this, itemView);\n"
            "        }\n"
            "    }\n"
            "}\n"
    </string>

    <string name="code_glide_transformation">
            "\n"
            "package com.xiaomai.myproject.glide.adapter;\n"
            "\n"
            "import android.content.Context;\n"
            "import android.graphics.Color;\n"
            "import android.graphics.PointF;\n"
            "import android.support.v7.widget.RecyclerView;\n"
            "import android.view.View;\n"
            "import android.view.ViewGroup;\n"
            "import android.widget.ImageView;\n"
            "import android.widget.TextView;\n"
            "\n"
            "import com.bumptech.glide.Glide;\n"
            "import com.bumptech.glide.load.resource.bitmap.CenterCrop;\n"
            "import com.xiaomai.myproject.R;\n"
            "import com.xiaomai.myproject.utils.DisplayUtils;\n"
            "\n"
            "import butterknife.BindView;\n"
            "import butterknife.ButterKnife;\n"
            "import jp.wasabeef.glide.transformations.BlurTransformation;\n"
            "import jp.wasabeef.glide.transformations.ColorFilterTransformation;\n"
            "import jp.wasabeef.glide.transformations.CropCircleTransformation;\n"
            "import jp.wasabeef.glide.transformations.CropSquareTransformation;\n"
            "import jp.wasabeef.glide.transformations.CropTransformation;\n"
            "import jp.wasabeef.glide.transformations.GrayscaleTransformation;\n"
            "import jp.wasabeef.glide.transformations.MaskTransformation;\n"
            "import jp.wasabeef.glide.transformations.RoundedCornersTransformation;\n"
            "import jp.wasabeef.glide.transformations.gpu.BrightnessFilterTransformation;\n"
            "import jp.wasabeef.glide.transformations.gpu.ContrastFilterTransformation;\n"
            "import jp.wasabeef.glide.transformations.gpu.InvertFilterTransformation;\n"
            "import jp.wasabeef.glide.transformations.gpu.KuwaharaFilterTransformation;\n"
            "import jp.wasabeef.glide.transformations.gpu.PixelationFilterTransformation;\n"
            "import jp.wasabeef.glide.transformations.gpu.SepiaFilterTransformation;\n"
            "import jp.wasabeef.glide.transformations.gpu.SketchFilterTransformation;\n"
            "import jp.wasabeef.glide.transformations.gpu.SwirlFilterTransformation;\n"
            "import jp.wasabeef.glide.transformations.gpu.ToonFilterTransformation;\n"
            "import jp.wasabeef.glide.transformations.gpu.VignetteFilterTransformation;\n"
            "\n"
            "/**\n"
            " * Created by XiaoMai on 2017/2/10 11:21.\n"
            " * compile 'jp.wasabeef:glide-transformations:2.0.1'\n"
            " * // If you want to use the GPU Filters compile\n"
            " * 'jp.co.cyberagent.android.gpuimage:gpuimage-library:1.4.1'\n"
            " */\n"
            "public class GlideTransformationAdapter\n"
            "        extends RecyclerView.Adapter&lt;GlideTransformationAdapter.ViewHolder&gt; {\n"
            "\n"
            "    private Context context;\n"
            "\n"
            "    private String[] datas;\n"
            "\n"
            "    public GlideTransformationAdapter(Context context, String[] datas) {\n"
            "        this.context = context;\n"
            "        this.datas = datas;\n"
            "    }\n"
            "\n"
            "    @Override\n"
            "    public ViewHolder onCreateViewHolder(ViewGroup parent, int viewType) {\n"
            "        View itemView = View.inflate(context, R.layout.item_glide_transformation, null);\n"
            "        return new ViewHolder(itemView);\n"
            "    }\n"
            "\n"
            "    @Override\n"
            "    public void onBindViewHolder(ViewHolder holder, int position) {\n"
            "        int integer = Integer.parseInt(datas[position]);\n"
            "        holder.textView.setText(\"item \" + (position + 1));\n"
            "        switch (integer) {\n"
            "            case 1: {\n"
            "                int width = DisplayUtils.dip2px(context, 133.33f);\n"
            "                int height = DisplayUtils.dip2px(context, 126.33f);\n"
            "                Glide.with(context).load(R.drawable.ic_item).override(width, height)\n"
            "                        .bitmapTransform(new CenterCrop(context),\n"
            "                                new MaskTransformation(context, R.drawable.mask_starfish))\n"
            "                        .into(holder.imageView);\n"
            "                break;\n"
            "            }\n"
            "            case 2: {\n"
            "                int width = DisplayUtils.dip2px(context, 150.0f);\n"
            "                int height = DisplayUtils.dip2px(context, 100.0f);\n"
            "                Glide.with(context).load(R.drawable.ic_item).override(width, height)\n"
            "                        .bitmapTransform(new CenterCrop(context),\n"
            "                                new MaskTransformation(context, R.drawable.mask_chat_right))\n"
            "                        .into(holder.imageView);\n"
            "                break;\n"
            "            }\n"
            "            case 3:\n"
            "                Glide.with(context).load(R.drawable.demo).bitmapTransform(\n"
            "                        new CropTransformation(context, 300, 100, CropTransformation.CropType.TOP))\n"
            "                        .into(holder.imageView);\n"
            "                break;\n"
            "            case 4:\n"
            "                Glide.with(context).load(R.drawable.demo)\n"
            "                        .bitmapTransform(new CropTransformation(context, 300, 100))\n"
            "                        .into(holder.imageView);\n"
            "                break;\n"
            "            case 5:\n"
            "                Glide.with(context).load(R.drawable.demo)\n"
            "                        .bitmapTransform(new CropTransformation(context, 300, 100,\n"
            "                                CropTransformation.CropType.BOTTOM))\n"
            "                        .into(holder.imageView);\n"
            "\n"
            "                break;\n"
            "            case 6:\n"
            "                Glide.with(context).load(R.drawable.demo)\n"
            "                        .bitmapTransform(new CropSquareTransformation(context))\n"
            "                        .into(holder.imageView);\n"
            "                break;\n"
            "            case 7:\n"
            "                Glide.with(context).load(R.drawable.demo)\n"
            "                        .bitmapTransform(new CropCircleTransformation(context))\n"
            "                        .into(holder.imageView);\n"
            "                break;\n"
            "            case 8:\n"
            "                Glide.with(context).load(R.drawable.demo)\n"
            "                        .bitmapTransform(\n"
            "                                new ColorFilterTransformation(context, Color.argb(80, 255, 0, 0)))\n"
            "                        .into(holder.imageView);\n"
            "                break;\n"
            "            case 9:\n"
            "                Glide.with(context).load(R.drawable.demo)\n"
            "                        .bitmapTransform(new GrayscaleTransformation(context))\n"
            "                        .into(holder.imageView);\n"
            "                break;\n"
            "            case 10:\n"
            "                Glide.with(context).load(R.drawable.demo)\n"
            "                        .bitmapTransform(new RoundedCornersTransformation(context, 30, 0,\n"
            "                                RoundedCornersTransformation.CornerType.BOTTOM))\n"
            "                        .into(holder.imageView);\n"
            "                break;\n"
            "            case 11:\n"
            "                Glide.with(context).load(R.drawable.ic_item)\n"
            "                        .bitmapTransform(new BlurTransformation(context, 25))\n"
            "                        .into(holder.imageView);\n"
            "                break;\n"
            "            case 12:\n"
            "                Glide.with(context).load(R.drawable.demo)\n"
            "                        .bitmapTransform(new ToonFilterTransformation(context))\n"
            "                        .into(holder.imageView);\n"
            "                break;\n"
            "            case 13:\n"
            "                Glide.with(context).load(R.drawable.ic_item)\n"
            "                        .bitmapTransform(new SepiaFilterTransformation(context))\n"
            "                        .into(holder.imageView);\n"
            "                break;\n"
            "            case 14:\n"
            "                Glide.with(context).load(R.drawable.ic_item)\n"
            "                        .bitmapTransform(new ContrastFilterTransformation(context, 2.0f))\n"
            "                        .into(holder.imageView);\n"
            "                break;\n"
            "            case 15:\n"
            "                Glide.with(context).load(R.drawable.ic_item)\n"
            "                        .bitmapTransform(new InvertFilterTransformation(context))\n"
            "                        .into(holder.imageView);\n"
            "                break;\n"
            "            case 16:\n"
            "                Glide.with(context).load(R.drawable.ic_item)\n"
            "                        .bitmapTransform(new PixelationFilterTransformation(context, 20))\n"
            "                        .into(holder.imageView);\n"
            "                break;\n"
            "            case 17:\n"
            "                Glide.with(context).load(R.drawable.ic_item)\n"
            "                        .bitmapTransform(new SketchFilterTransformation(context))\n"
            "                        .into(holder.imageView);\n"
            "                break;\n"
            "            case 18:\n"
            "                Glide.with(context).load(R.drawable.ic_item).bitmapTransform(\n"
            "                        new SwirlFilterTransformation(context, 0.5f, 1.0f, new PointF(0.5f, 0.5f)))\n"
            "                        .into(holder.imageView);\n"
            "                break;\n"
            "            case 19:\n"
            "                Glide.with(context).load(R.drawable.ic_item)\n"
            "                        .bitmapTransform(new BrightnessFilterTransformation(context, 0.5f))\n"
            "                        .into(holder.imageView);\n"
            "                break;\n"
            "            case 20:\n"
            "                Glide.with(context).load(R.drawable.ic_item)\n"
            "                        .bitmapTransform(new KuwaharaFilterTransformation(context, 25))\n"
            "                        .into(holder.imageView);\n"
            "                break;\n"
            "            case 21:\n"
            "                Glide.with(context).load(R.drawable.ic_item)\n"
            "                        .bitmapTransform(new VignetteFilterTransformation(context,\n"
            "                                new PointF(0.5f, 0.5f), new float[] {\n"
            "                                        0.0f, 0.0f, 0.0f\n"
            "                                }, 0f, 0.75f)).into(holder.imageView);\n"
            "                break;\n"
            "        }\n"
            "    }\n"
            "\n"
            "    @Override\n"
            "    public int getItemCount() {\n"
            "        return datas == null ? 0 : datas.length;\n"
            "    }\n"
            "\n"
            "    static class ViewHolder extends RecyclerView.ViewHolder {\n"
            "\n"
            "        @BindView(R.id.iv_glide_transformation)\n"
            "        ImageView imageView;\n"
            "\n"
            "        @BindView(R.id.tv_glide_transformation)\n"
            "        TextView textView;\n"
            "\n"
            "        public ViewHolder(View itemView) {\n"
            "            super(itemView);\n"
            "            ButterKnife.bind(this, itemView);\n"
            "        }\n"
            "    }\n"
            "}\n"
    </string>
</resources>